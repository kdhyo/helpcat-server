scalar DateTime
scalar Email

type Query {
  userAll: [User]
  serviceAll: [Service!]
}

type Mutation {
  validateEmail(validateEmailToken: String!): AuthPayload!
  serviceDelete(id: Int!): Boolean!
  editService(
    id: Int!
    title: String!
    contents: String!
    price: Int
    address: String
    startAt: DateTime
    endAt: DateTime
  ): Boolean!
}

type Subscription {
  newService: Service
}

type User {
  id: ID!
  email: Email!
  emailvalidated: Boolean
  validateEmailToken: String
  password: String
  userName: String
  nickName: String
  gender: String
  phone: String
  address: String
  birh: String
  createdAt: DateTime
}

type AuthPayload {
  token: String
  user: User
}

type Service {
  id: ID
  title: String
  contents: String
  address: String
  price: Int
  progress: Boolean
  startAt: DateTime
  endAt: DateTime
  reqUser: User
  ansUser: User
}
