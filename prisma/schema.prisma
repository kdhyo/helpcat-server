generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id          Int          @default(autoincrement()) @id
  email       String?      @unique
  password    String
  userName    String
  nickName    String?      @unique
  gender      String
  phone       String
  address     String
  lat         Float?
  long        Float?
  birh        String
  ratingAvg   Float?
  ratingCount Int          @default(0)
  createdAt   DateTime     @default(now())
  fromTouser  message[]    @relation("message_fromTouser")
  toTouser    message[]    @relation("message_toTouser")
  rating      rating[]
  ansUser     service[]    @relation("service_ansUserIdTouser")
  reqUser     service[]    @relation("service_reqUserIdTouser")
  useronroom  useronroom[]
}

model rating {
  id        Int      @default(autoincrement()) @id
  userId    Int?
  rating    Float?
  review    String?
  createdAt DateTime @default(now())
  user      user?    @relation(fields: [userId], references: [id])

  @@index([userId], name: "userId")
}

model room {
  id         Int          @default(autoincrement()) @id
  createdAt  DateTime     @default(now())
  message    message[]
  useronroom useronroom[]
}

model service {
  id        Int      @default(autoincrement()) @id
  reqUserId Int?
  ansUserId Int?
  title     String
  contents  String
  address   String
  price     Int
  progress  Boolean? @default(false)
  createdAt DateTime @default(now())
  startAt   DateTime @default(now())
  endAt     DateTime @default(now())
  ansUser   user?    @relation("service_ansUserIdTouser", fields: [ansUserId], references: [id])
  reqUser   user?    @relation("service_reqUserIdTouser", fields: [reqUserId], references: [id])

  @@index([ansUserId], name: "ansUserId")
  @@index([reqUserId], name: "reqUserId")
}

model message {
  id            Int      @default(autoincrement()) @id
  text          String
  from          Int?
  to            Int?
  room          Int?
  createdAt     DateTime @default(now())
  fromTouser    user?    @relation("message_fromTouser", fields: [from], references: [id])
  messageToroom room?    @relation(fields: [room], references: [id])
  toTouser      user?    @relation("message_toTouser", fields: [to], references: [id])

  @@index([from], name: "from")
  @@index([room], name: "room")
  @@index([to], name: "to")
}

model useronroom {
  id     Int   @default(autoincrement()) @id
  roomId Int?
  userId Int?
  room   room? @relation(fields: [roomId], references: [id])
  user   user? @relation(fields: [userId], references: [id])

  @@index([roomId], name: "roomId")
  @@index([userId], name: "userId")
}
