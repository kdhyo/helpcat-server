generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id                 Int          @default(autoincrement()) @id
  email              String?      @unique
  emailvalidated     Boolean?     @default(false)
  validateEmailToken String?      @unique
  password           String
  userName           String
  nickName           String?      @unique
  gender             String
  phone              String
  address            String
  birh               String
  ratingAvg          Int?
  ratingCount        Int          @default(0)
  createdAt          DateTime     @default(now())
  fromTouser         Message[]    @relation("fromTouser")
  toTouser           Message[]    @relation("toTouser")
  rating             rating[]
  ansUser            service[]    @relation("ansUser")
  reqUser            service[]    @relation("reqUser")
  useronroom         UserOnRoom[]
}

model UserOnRoom {
  id     Int  @default(autoincrement()) @id
  roomId Int
  userId Int
  room   room @relation(fields: [roomId], references: [id])
  user   user @relation(fields: [userId], references: [id])

  @@index([roomId], name: "roomId")
  @@index([userId], name: "userId")
}

model Message {
  id            Int      @default(autoincrement()) @id
  text          String
  from          Int
  to            Int
  room          Int
  createdAt     DateTime @default(now())
  fromTouser    user     @relation("fromTouser", fields: [from], references: [id])
  messageToroom room     @relation(fields: [room], references: [id])
  toTouser      user     @relation("toTouser", fields: [to], references: [id])

  @@index([from], name: "from")
  @@index([room], name: "room")
  @@index([to], name: "to")
}

model rating {
  id        Int      @default(autoincrement()) @id
  userId    Int
  rating    Int
  revivew   String
  createdAt DateTime @default(now())
  user      user     @relation(fields: [userId], references: [id])

  @@index([userId], name: "userId")
}

model room {
  id         Int          @default(autoincrement()) @id
  createdAt  DateTime     @default(now())
  message    Message[]
  useronroom UserOnRoom[]
}

model service {
  id        Int      @default(autoincrement()) @id
  reqUserId Int
  ansUserId Int?
  title     String
  contents  String
  address   String
  price     Int
  progress  Boolean? @default(false)
  createdAt DateTime @default(now())
  startAt   DateTime @default(now())
  endAt     DateTime @default(now())
  ansUser   user?    @relation("ansUser", fields: [ansUserId], references: [id])
  reqUser   user     @relation("reqUser", fields: [reqUserId], references: [id])

  @@index([ansUserId], name: "ansUserId")
  @@index([reqUserId], name: "reqUserId")
}
